{
  "flow": {
    "processGroups": [],
    "remoteProcessGroups": [],
    "processors": [
      {
        "revision": {
          "version": 0
        },
        "id": "c8d56491-4d2e-4751-589f-3d69cb5f067f",
        "uri": "http://localhost:8888/nifi-api/processors/c8d56491-4d2e-4751-589f-3d69cb5f067f",
        "position": {
          "x": 647.4979858398438,
          "y": 1124.8004570007324
        },
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "bulletins": [],
        "component": {
          "id": "c8d56491-4d2e-4751-589f-3d69cb5f067f",
          "parentGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "position": {
            "x": 647.4979858398438,
            "y": 1124.8004570007324
          },
          "name": "LogAttribute",
          "type": "org.apache.nifi.processors.standard.LogAttribute",
          "state": "STOPPED",
          "style": {},
          "relationships": [
            {
              "name": "success",
              "description": "All FlowFiles are routed to this relationship",
              "autoTerminate": true
            }
          ],
          "supportsParallelProcessing": true,
          "supportsEventDriven": true,
          "supportsBatching": true,
          "persistsState": false,
          "inputRequirement": "INPUT_REQUIRED",
          "config": {
            "properties": {
              "Log Level": null,
              "Log Payload": "true",
              "Attributes to Log": null,
              "Attributes to Ignore": null,
              "Log prefix": null
            },
            "descriptors": {
              "Log Level": {
                "name": "Log Level",
                "displayName": "Log Level",
                "description": "The Log Level to use when logging the Attributes",
                "defaultValue": "info",
                "allowableValues": [
                  {
                    "displayName": "trace",
                    "value": "trace"
                  },
                  {
                    "displayName": "debug",
                    "value": "debug"
                  },
                  {
                    "displayName": "info",
                    "value": "info"
                  },
                  {
                    "displayName": "warn",
                    "value": "warn"
                  },
                  {
                    "displayName": "error",
                    "value": "error"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Log Payload": {
                "name": "Log Payload",
                "displayName": "Log Payload",
                "description": "If true, the FlowFile's payload will be logged, in addition to its attributes; otherwise, just the Attributes will be logged.",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Attributes to Log": {
                "name": "Attributes to Log",
                "displayName": "Attributes to Log",
                "description": "A comma-separated list of Attributes to Log. If not specified, all attributes will be logged.",
                "required": false,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Attributes to Ignore": {
                "name": "Attributes to Ignore",
                "displayName": "Attributes to Ignore",
                "description": "A comma-separated list of Attributes to ignore. If not specified, no attributes will be ignored.",
                "required": false,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Log prefix": {
                "name": "Log prefix",
                "displayName": "Log prefix",
                "description": "Log prefix appended to the log lines. It helps to distinguish the output of multiple LogAttribute processors.",
                "required": false,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": true
              }
            },
            "schedulingPeriod": "0 sec",
            "schedulingStrategy": "TIMER_DRIVEN",
            "penaltyDuration": "30 sec",
            "yieldDuration": "1 sec",
            "bulletinLevel": "WARN",
            "runDurationMillis": 0,
            "concurrentlySchedulableTaskCount": 1,
            "comments": "",
            "lossTolerant": false,
            "defaultConcurrentTasks": {
              "TIMER_DRIVEN": "1",
              "EVENT_DRIVEN": "0",
              "CRON_DRIVEN": "1"
            },
            "defaultSchedulingPeriod": {
              "TIMER_DRIVEN": "0 sec",
              "CRON_DRIVEN": "* * * * * ?"
            }
          }
        },
        "inputRequirement": "INPUT_REQUIRED",
        "status": {
          "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "id": "c8d56491-4d2e-4751-589f-3d69cb5f067f",
          "name": "LogAttribute",
          "statsLastRefreshed": "18:06:21 CEST",
          "aggregateSnapshot": {
            "id": "c8d56491-4d2e-4751-589f-3d69cb5f067f",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "LogAttribute",
            "type": "LogAttribute",
            "runStatus": "Stopped",
            "bytesRead": 0,
            "bytesWritten": 0,
            "read": "0 bytes",
            "written": "0 bytes",
            "flowFilesIn": 0,
            "bytesIn": 0,
            "input": "0 (0 bytes)",
            "flowFilesOut": 0,
            "bytesOut": 0,
            "output": "0 (0 bytes)",
            "taskCount": 0,
            "tasksDurationNanos": 0,
            "tasks": "0",
            "tasksDuration": "00:00:00.000",
            "activeThreadCount": 0
          }
        }
      },
      {
        "revision": {
          "version": 0
        },
        "id": "daf07177-3fe2-42a8-5074-20a9c39e054d",
        "uri": "http://localhost:8888/nifi-api/processors/daf07177-3fe2-42a8-5074-20a9c39e054d",
        "position": {
          "x": 632.4979858398438,
          "y": 426.66045700073244
        },
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "bulletins": [],
        "component": {
          "id": "daf07177-3fe2-42a8-5074-20a9c39e054d",
          "parentGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "position": {
            "x": 632.4979858398438,
            "y": 426.66045700073244
          },
          "name": "Create Test Data",
          "type": "org.apache.nifi.processors.standard.ReplaceText",
          "state": "STOPPED",
          "style": {},
          "relationships": [
            {
              "name": "failure",
              "description": "FlowFiles that could not be updated are routed to this relationship",
              "autoTerminate": true
            },
            {
              "name": "success",
              "description": "FlowFiles that have been successfully processed are routed to this relationship. This includes both FlowFiles that had text replaced and those that did not.",
              "autoTerminate": false
            }
          ],
          "supportsParallelProcessing": true,
          "supportsEventDriven": true,
          "supportsBatching": true,
          "persistsState": false,
          "inputRequirement": "INPUT_REQUIRED",
          "config": {
            "properties": {
              "Regular Expression": null,
              "Replacement Value": "This is a 26-02-2000 12.37.29 test",
              "Character Set": null,
              "Maximum Buffer Size": null,
              "Replacement Strategy": null,
              "Evaluation Mode": null
            },
            "descriptors": {
              "Regular Expression": {
                "name": "Regular Expression",
                "displayName": "Search Value",
                "description": "The Search Value to search for in the FlowFile content. Only used for 'Literal Replace' and 'Regex Replace' matching strategies",
                "defaultValue": "(?s:^.*$)",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": true
              },
              "Replacement Value": {
                "name": "Replacement Value",
                "displayName": "Replacement Value",
                "description": "The value to insert using the 'Replacement Strategy'. Using \"Regex Replace\" back-references to Regular Expression capturing groups are supported, but back-references that reference capturing groups that do not exist in the regular expression will be treated as literal value. Back References may also be referenced using the Expression Language, as '$1', '$2', etc. The single-tick marks MUST be included, as these variables are not \"Standard\" attribute names (attribute names must be quoted unless they contain only numbers, letters, and _).",
                "defaultValue": "$1",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": true
              },
              "Character Set": {
                "name": "Character Set",
                "displayName": "Character Set",
                "description": "The Character Set in which the file is encoded",
                "defaultValue": "UTF-8",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Maximum Buffer Size": {
                "name": "Maximum Buffer Size",
                "displayName": "Maximum Buffer Size",
                "description": "Specifies the maximum amount of data to buffer (per file or per line, depending on the Evaluation Mode) in order to apply the replacement. If 'Entire Text' (in Evaluation Mode) is selected and the FlowFile is larger than this value, the FlowFile will be routed to 'failure'. In 'Line-by-Line' Mode, if a single line is larger than this value, the FlowFile will be routed to 'failure'. A default value of 1 MB is provided, primarily for 'Entire Text' mode. In 'Line-by-Line' Mode, a value such as 8 KB or 16 KB is suggested. This value is ignored if the <Replacement Strategy> property is set to one of: Append, Prepend, Always Replace",
                "defaultValue": "1 MB",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Replacement Strategy": {
                "name": "Replacement Strategy",
                "displayName": "Replacement Strategy",
                "description": "The strategy for how and what to replace within the FlowFile's text content.",
                "defaultValue": "Regex Replace",
                "allowableValues": [
                  {
                    "displayName": "Prepend",
                    "value": "Prepend",
                    "description": "Insert the Replacement Value at the beginning of the FlowFile or the beginning of each line (depending on the Evaluation Mode). For \"Line-by-Line\" Evaluation Mode, the value will be prepended to each line. For \"Entire Text\" evaluation mode, the value will be prepended to the entire text."
                  },
                  {
                    "displayName": "Append",
                    "value": "Append",
                    "description": "Insert the Replacement Value at the end of the FlowFile or the end of each line (depending on the Evluation Mode). For \"Line-by-Line\" Evaluation Mode, the value will be appended to each line. For \"Entire Text\" evaluation mode, the value will be appended to the entire text."
                  },
                  {
                    "displayName": "Regex Replace",
                    "value": "Regex Replace",
                    "description": "Interpret the Search Value as a Regular Expression and replace all matches with the Replacement Value. The Replacement Value may reference Capturing Groups used in the Search Value by using a dollar-sign followed by the Capturing Group number, such as $1 or $2. If the Search Value is set to .* then everything is replaced without even evaluating the Regular Expression."
                  },
                  {
                    "displayName": "Literal Replace",
                    "value": "Literal Replace",
                    "description": "Search for all instances of the Search Value and replace the matches with the Replacement Value."
                  },
                  {
                    "displayName": "Always Replace",
                    "value": "Always Replace",
                    "description": "Always replaces the entire line or the entire contents of the FlowFile (depending on the value of the <Evaluation Mode> property) and does not bother searching for any value. When this strategy is chosen, the <Search Value> property is ignored."
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Evaluation Mode": {
                "name": "Evaluation Mode",
                "displayName": "Evaluation Mode",
                "description": "Run the 'Replacement Strategy' against each line separately (Line-by-Line) or buffer the entire file into memory (Entire Text) and run against that.",
                "defaultValue": "Entire text",
                "allowableValues": [
                  {
                    "displayName": "Line-by-Line",
                    "value": "Line-by-Line"
                  },
                  {
                    "displayName": "Entire text",
                    "value": "Entire text"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              }
            },
            "schedulingPeriod": "0 sec",
            "schedulingStrategy": "TIMER_DRIVEN",
            "penaltyDuration": "30 sec",
            "yieldDuration": "1 sec",
            "bulletinLevel": "WARN",
            "runDurationMillis": 0,
            "concurrentlySchedulableTaskCount": 1,
            "comments": "",
            "lossTolerant": false,
            "defaultConcurrentTasks": {
              "TIMER_DRIVEN": "1",
              "EVENT_DRIVEN": "0",
              "CRON_DRIVEN": "1"
            },
            "defaultSchedulingPeriod": {
              "TIMER_DRIVEN": "0 sec",
              "CRON_DRIVEN": "* * * * * ?"
            }
          }
        },
        "inputRequirement": "INPUT_REQUIRED",
        "status": {
          "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "id": "daf07177-3fe2-42a8-5074-20a9c39e054d",
          "name": "Create Test Data",
          "statsLastRefreshed": "18:06:21 CEST",
          "aggregateSnapshot": {
            "id": "daf07177-3fe2-42a8-5074-20a9c39e054d",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "Create Test Data",
            "type": "ReplaceText",
            "runStatus": "Stopped",
            "bytesRead": 0,
            "bytesWritten": 0,
            "read": "0 bytes",
            "written": "0 bytes",
            "flowFilesIn": 0,
            "bytesIn": 0,
            "input": "0 (0 bytes)",
            "flowFilesOut": 0,
            "bytesOut": 0,
            "output": "0 (0 bytes)",
            "taskCount": 0,
            "tasksDurationNanos": 0,
            "tasks": "0",
            "tasksDuration": "00:00:00.000",
            "activeThreadCount": 0
          }
        }
      },
      {
        "revision": {
          "version": 0
        },
        "id": "13613f8e-d402-4018-f9c4-0172641096d6",
        "uri": "http://localhost:8888/nifi-api/processors/13613f8e-d402-4018-f9c4-0172641096d6",
        "position": {
          "x": 638.4979858398438,
          "y": 658.4804570007325
        },
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "bulletins": [],
        "component": {
          "id": "13613f8e-d402-4018-f9c4-0172641096d6",
          "parentGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "position": {
            "x": 638.4979858398438,
            "y": 658.4804570007325
          },
          "name": "Extract Date to Attribute",
          "type": "org.apache.nifi.processors.standard.ExtractText",
          "state": "STOPPED",
          "style": {},
          "relationships": [
            {
              "name": "matched",
              "description": "FlowFiles are routed to this relationship when the Regular Expression is successfully evaluated and the FlowFile is modified as a result",
              "autoTerminate": false
            },
            {
              "name": "unmatched",
              "description": "FlowFiles are routed to this relationship when no provided Regular Expression matches the content of the FlowFile",
              "autoTerminate": true
            }
          ],
          "supportsParallelProcessing": true,
          "supportsEventDriven": true,
          "supportsBatching": true,
          "persistsState": false,
          "inputRequirement": "INPUT_REQUIRED",
          "config": {
            "properties": {
              "Character Set": null,
              "Maximum Buffer Size": null,
              "Maximum Capture Group Length": null,
              "Enable Canonical Equivalence": null,
              "Enable Case-insensitive Matching": null,
              "Permit Whitespace and Comments in Pattern": null,
              "Enable DOTALL Mode": null,
              "Enable Literal Parsing of the Pattern": null,
              "Enable Multiline Mode": null,
              "Enable Unicode-aware Case Folding": null,
              "Enable Unicode Predefined Character Classes": null,
              "Enable Unix Lines Mode": null,
              "Include Capture Group 0": null,
              "date": "(\\d{2}-\\d{2}-\\d{4} \\d{2}\\.\\d{2}\\.\\d{2})"
            },
            "descriptors": {
              "Character Set": {
                "name": "Character Set",
                "displayName": "Character Set",
                "description": "The Character Set in which the file is encoded",
                "defaultValue": "UTF-8",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Maximum Buffer Size": {
                "name": "Maximum Buffer Size",
                "displayName": "Maximum Buffer Size",
                "description": "Specifies the maximum amount of data to buffer (per file) in order to apply the regular expressions.  Files larger than the specified maximum will not be fully evaluated.",
                "defaultValue": "1 MB",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Maximum Capture Group Length": {
                "name": "Maximum Capture Group Length",
                "displayName": "Maximum Capture Group Length",
                "description": "Specifies the maximum number of characters a given capture group value can have.  Any characters beyond the max will be truncated.",
                "defaultValue": "1024",
                "required": false,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Enable Canonical Equivalence": {
                "name": "Enable Canonical Equivalence",
                "displayName": "Enable Canonical Equivalence",
                "description": "Indicates that two characters match only when their full canonical decompositions match.",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Enable Case-insensitive Matching": {
                "name": "Enable Case-insensitive Matching",
                "displayName": "Enable Case-insensitive Matching",
                "description": "Indicates that two characters match even if they are in a different case.  Can also be specified via the embeded flag (?i).",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Permit Whitespace and Comments in Pattern": {
                "name": "Permit Whitespace and Comments in Pattern",
                "displayName": "Permit Whitespace and Comments in Pattern",
                "description": "In this mode, whitespace is ignored, and embedded comments starting with # are ignored until the end of a line.  Can also be specified via the embeded flag (?x).",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Enable DOTALL Mode": {
                "name": "Enable DOTALL Mode",
                "displayName": "Enable DOTALL Mode",
                "description": "Indicates that the expression '.' should match any character, including a line terminator.  Can also be specified via the embeded flag (?s).",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Enable Literal Parsing of the Pattern": {
                "name": "Enable Literal Parsing of the Pattern",
                "displayName": "Enable Literal Parsing of the Pattern",
                "description": "Indicates that Metacharacters and escape characters should be given no special meaning.",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Enable Multiline Mode": {
                "name": "Enable Multiline Mode",
                "displayName": "Enable Multiline Mode",
                "description": "Indicates that '^' and '$' should match just after and just before a line terminator or end of sequence, instead of only the begining or end of the entire input.  Can also be specified via the embeded flag (?m).",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Enable Unicode-aware Case Folding": {
                "name": "Enable Unicode-aware Case Folding",
                "displayName": "Enable Unicode-aware Case Folding",
                "description": "When used with 'Enable Case-insensitive Matching', matches in a manner consistent with the Unicode Standard.  Can also be specified via the embeded flag (?u).",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Enable Unicode Predefined Character Classes": {
                "name": "Enable Unicode Predefined Character Classes",
                "displayName": "Enable Unicode Predefined Character Classes",
                "description": "Specifies conformance with the Unicode Technical Standard #18: Unicode Regular Expression Annex C: Compatibility Properties.  Can also be specified via the embeded flag (?U).",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Enable Unix Lines Mode": {
                "name": "Enable Unix Lines Mode",
                "displayName": "Enable Unix Lines Mode",
                "description": "Indicates that only the '\n' line terminator is recognized in the behavior of '.', '^', and '$'.  Can also be specified via the embeded flag (?d).",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Include Capture Group 0": {
                "name": "Include Capture Group 0",
                "displayName": "Include Capture Group 0",
                "description": "Indicates that Capture Group 0 should be included as an attribute. Capture Group 0 represents the entirety of the regular expression match, is typically not used, and could have considerable length.",
                "defaultValue": "true",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "date": {
                "name": "date",
                "displayName": "date",
                "description": "",
                "required": false,
                "sensitive": false,
                "dynamic": true,
                "supportsEl": false
              }
            },
            "schedulingPeriod": "0 sec",
            "schedulingStrategy": "TIMER_DRIVEN",
            "penaltyDuration": "30 sec",
            "yieldDuration": "1 sec",
            "bulletinLevel": "WARN",
            "runDurationMillis": 0,
            "concurrentlySchedulableTaskCount": 1,
            "comments": "",
            "lossTolerant": false,
            "defaultConcurrentTasks": {
              "TIMER_DRIVEN": "1",
              "EVENT_DRIVEN": "0",
              "CRON_DRIVEN": "1"
            },
            "defaultSchedulingPeriod": {
              "TIMER_DRIVEN": "0 sec",
              "CRON_DRIVEN": "* * * * * ?"
            }
          }
        },
        "inputRequirement": "INPUT_REQUIRED",
        "status": {
          "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "id": "13613f8e-d402-4018-f9c4-0172641096d6",
          "name": "Extract Date to Attribute",
          "statsLastRefreshed": "18:06:21 CEST",
          "aggregateSnapshot": {
            "id": "13613f8e-d402-4018-f9c4-0172641096d6",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "Extract Date to Attribute",
            "type": "ExtractText",
            "runStatus": "Stopped",
            "bytesRead": 0,
            "bytesWritten": 0,
            "read": "0 bytes",
            "written": "0 bytes",
            "flowFilesIn": 0,
            "bytesIn": 0,
            "input": "0 (0 bytes)",
            "flowFilesOut": 0,
            "bytesOut": 0,
            "output": "0 (0 bytes)",
            "taskCount": 0,
            "tasksDurationNanos": 0,
            "tasks": "0",
            "tasksDuration": "00:00:00.000",
            "activeThreadCount": 0
          }
        }
      },
      {
        "revision": {
          "version": 0
        },
        "id": "3fde726d-5cc1-4bb6-0a59-a6125baf0d49",
        "uri": "http://localhost:8888/nifi-api/processors/3fde726d-5cc1-4bb6-0a59-a6125baf0d49",
        "position": {
          "x": 631,
          "y": 164
        },
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "bulletins": [],
        "component": {
          "id": "3fde726d-5cc1-4bb6-0a59-a6125baf0d49",
          "parentGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "position": {
            "x": 631,
            "y": 164
          },
          "name": "GenerateFlowFile",
          "type": "org.apache.nifi.processors.standard.GenerateFlowFile",
          "state": "STOPPED",
          "style": {},
          "relationships": [
            {
              "name": "success",
              "description": "",
              "autoTerminate": false
            }
          ],
          "supportsParallelProcessing": true,
          "supportsEventDriven": false,
          "supportsBatching": true,
          "persistsState": false,
          "inputRequirement": "INPUT_FORBIDDEN",
          "config": {
            "properties": {
              "File Size": "1 kb",
              "Batch Size": null,
              "Data Format": null,
              "Unique FlowFiles": null
            },
            "descriptors": {
              "File Size": {
                "name": "File Size",
                "displayName": "File Size",
                "description": "The size of the file that will be used",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Batch Size": {
                "name": "Batch Size",
                "displayName": "Batch Size",
                "description": "The number of FlowFiles to be transferred in each invocation",
                "defaultValue": "1",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Data Format": {
                "name": "Data Format",
                "displayName": "Data Format",
                "description": "Specifies whether the data should be Text or Binary",
                "defaultValue": "Binary",
                "allowableValues": [
                  {
                    "displayName": "Binary",
                    "value": "Binary"
                  },
                  {
                    "displayName": "Text",
                    "value": "Text"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Unique FlowFiles": {
                "name": "Unique FlowFiles",
                "displayName": "Unique FlowFiles",
                "description": "If true, each FlowFile that is generated will be unique. If false, a random value will be generated and all FlowFiles will get the same content but this offers much higher throughput",
                "defaultValue": "false",
                "allowableValues": [
                  {
                    "displayName": "true",
                    "value": "true"
                  },
                  {
                    "displayName": "false",
                    "value": "false"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              }
            },
            "schedulingPeriod": "10 sec",
            "schedulingStrategy": "TIMER_DRIVEN",
            "penaltyDuration": "30 sec",
            "yieldDuration": "1 sec",
            "bulletinLevel": "WARN",
            "runDurationMillis": 0,
            "concurrentlySchedulableTaskCount": 1,
            "comments": "",
            "lossTolerant": false,
            "defaultConcurrentTasks": {
              "TIMER_DRIVEN": "1",
              "EVENT_DRIVEN": "0",
              "CRON_DRIVEN": "1"
            },
            "defaultSchedulingPeriod": {
              "TIMER_DRIVEN": "0 sec",
              "CRON_DRIVEN": "* * * * * ?"
            }
          }
        },
        "inputRequirement": "INPUT_FORBIDDEN",
        "status": {
          "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "id": "3fde726d-5cc1-4bb6-0a59-a6125baf0d49",
          "name": "GenerateFlowFile",
          "statsLastRefreshed": "18:06:21 CEST",
          "aggregateSnapshot": {
            "id": "3fde726d-5cc1-4bb6-0a59-a6125baf0d49",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "GenerateFlowFile",
            "type": "GenerateFlowFile",
            "runStatus": "Stopped",
            "bytesRead": 0,
            "bytesWritten": 0,
            "read": "0 bytes",
            "written": "0 bytes",
            "flowFilesIn": 0,
            "bytesIn": 0,
            "input": "0 (0 bytes)",
            "flowFilesOut": 0,
            "bytesOut": 0,
            "output": "0 (0 bytes)",
            "taskCount": 0,
            "tasksDurationNanos": 0,
            "tasks": "0",
            "tasksDuration": "00:00:00.000",
            "activeThreadCount": 0
          }
        }
      },
      {
        "revision": {
          "version": 0
        },
        "id": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
        "uri": "http://localhost:8888/nifi-api/processors/55c734e3-9e8c-4d8e-043d-947cf175a5c2",
        "position": {
          "x": 645.9979858398438,
          "y": 894.3204570007325
        },
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "bulletins": [],
        "component": {
          "id": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
          "parentGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "position": {
            "x": 645.9979858398438,
            "y": 894.3204570007325
          },
          "name": "Replace Content with new Date",
          "type": "org.apache.nifi.processors.standard.ReplaceText",
          "state": "STOPPED",
          "style": {},
          "relationships": [
            {
              "name": "failure",
              "description": "FlowFiles that could not be updated are routed to this relationship",
              "autoTerminate": true
            },
            {
              "name": "success",
              "description": "FlowFiles that have been successfully processed are routed to this relationship. This includes both FlowFiles that had text replaced and those that did not.",
              "autoTerminate": false
            }
          ],
          "supportsParallelProcessing": true,
          "supportsEventDriven": true,
          "supportsBatching": true,
          "persistsState": false,
          "inputRequirement": "INPUT_REQUIRED",
          "config": {
            "properties": {
              "Regular Expression": "(\\d{2}-\\d{2}-\\d{4} \\d{2}\\.\\d{2}\\.\\d{2})",
              "Replacement Value": "${date:toDate(\"dd-MM-yyyy HH.mm.ss\"):format(\"yyyy-MM-dd HH:mm:ss+0000\")}",
              "Character Set": null,
              "Maximum Buffer Size": null,
              "Replacement Strategy": null,
              "Evaluation Mode": null
            },
            "descriptors": {
              "Regular Expression": {
                "name": "Regular Expression",
                "displayName": "Search Value",
                "description": "The Search Value to search for in the FlowFile content. Only used for 'Literal Replace' and 'Regex Replace' matching strategies",
                "defaultValue": "(?s:^.*$)",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": true
              },
              "Replacement Value": {
                "name": "Replacement Value",
                "displayName": "Replacement Value",
                "description": "The value to insert using the 'Replacement Strategy'. Using \"Regex Replace\" back-references to Regular Expression capturing groups are supported, but back-references that reference capturing groups that do not exist in the regular expression will be treated as literal value. Back References may also be referenced using the Expression Language, as '$1', '$2', etc. The single-tick marks MUST be included, as these variables are not \"Standard\" attribute names (attribute names must be quoted unless they contain only numbers, letters, and _).",
                "defaultValue": "$1",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": true
              },
              "Character Set": {
                "name": "Character Set",
                "displayName": "Character Set",
                "description": "The Character Set in which the file is encoded",
                "defaultValue": "UTF-8",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Maximum Buffer Size": {
                "name": "Maximum Buffer Size",
                "displayName": "Maximum Buffer Size",
                "description": "Specifies the maximum amount of data to buffer (per file or per line, depending on the Evaluation Mode) in order to apply the replacement. If 'Entire Text' (in Evaluation Mode) is selected and the FlowFile is larger than this value, the FlowFile will be routed to 'failure'. In 'Line-by-Line' Mode, if a single line is larger than this value, the FlowFile will be routed to 'failure'. A default value of 1 MB is provided, primarily for 'Entire Text' mode. In 'Line-by-Line' Mode, a value such as 8 KB or 16 KB is suggested. This value is ignored if the <Replacement Strategy> property is set to one of: Append, Prepend, Always Replace",
                "defaultValue": "1 MB",
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Replacement Strategy": {
                "name": "Replacement Strategy",
                "displayName": "Replacement Strategy",
                "description": "The strategy for how and what to replace within the FlowFile's text content.",
                "defaultValue": "Regex Replace",
                "allowableValues": [
                  {
                    "displayName": "Prepend",
                    "value": "Prepend",
                    "description": "Insert the Replacement Value at the beginning of the FlowFile or the beginning of each line (depending on the Evaluation Mode). For \"Line-by-Line\" Evaluation Mode, the value will be prepended to each line. For \"Entire Text\" evaluation mode, the value will be prepended to the entire text."
                  },
                  {
                    "displayName": "Append",
                    "value": "Append",
                    "description": "Insert the Replacement Value at the end of the FlowFile or the end of each line (depending on the Evluation Mode). For \"Line-by-Line\" Evaluation Mode, the value will be appended to each line. For \"Entire Text\" evaluation mode, the value will be appended to the entire text."
                  },
                  {
                    "displayName": "Regex Replace",
                    "value": "Regex Replace",
                    "description": "Interpret the Search Value as a Regular Expression and replace all matches with the Replacement Value. The Replacement Value may reference Capturing Groups used in the Search Value by using a dollar-sign followed by the Capturing Group number, such as $1 or $2. If the Search Value is set to .* then everything is replaced without even evaluating the Regular Expression."
                  },
                  {
                    "displayName": "Literal Replace",
                    "value": "Literal Replace",
                    "description": "Search for all instances of the Search Value and replace the matches with the Replacement Value."
                  },
                  {
                    "displayName": "Always Replace",
                    "value": "Always Replace",
                    "description": "Always replaces the entire line or the entire contents of the FlowFile (depending on the value of the <Evaluation Mode> property) and does not bother searching for any value. When this strategy is chosen, the <Search Value> property is ignored."
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              },
              "Evaluation Mode": {
                "name": "Evaluation Mode",
                "displayName": "Evaluation Mode",
                "description": "Run the 'Replacement Strategy' against each line separately (Line-by-Line) or buffer the entire file into memory (Entire Text) and run against that.",
                "defaultValue": "Entire text",
                "allowableValues": [
                  {
                    "displayName": "Line-by-Line",
                    "value": "Line-by-Line"
                  },
                  {
                    "displayName": "Entire text",
                    "value": "Entire text"
                  }
                ],
                "required": true,
                "sensitive": false,
                "dynamic": false,
                "supportsEl": false
              }
            },
            "schedulingPeriod": "0 sec",
            "schedulingStrategy": "TIMER_DRIVEN",
            "penaltyDuration": "30 sec",
            "yieldDuration": "1 sec",
            "bulletinLevel": "WARN",
            "runDurationMillis": 0,
            "concurrentlySchedulableTaskCount": 1,
            "comments": "",
            "lossTolerant": false,
            "defaultConcurrentTasks": {
              "TIMER_DRIVEN": "1",
              "EVENT_DRIVEN": "0",
              "CRON_DRIVEN": "1"
            },
            "defaultSchedulingPeriod": {
              "TIMER_DRIVEN": "0 sec",
              "CRON_DRIVEN": "* * * * * ?"
            }
          }
        },
        "inputRequirement": "INPUT_REQUIRED",
        "status": {
          "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "id": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
          "name": "Replace Content with new Date",
          "statsLastRefreshed": "18:06:21 CEST",
          "aggregateSnapshot": {
            "id": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "Replace Content with new Date",
            "type": "ReplaceText",
            "runStatus": "Stopped",
            "bytesRead": 0,
            "bytesWritten": 0,
            "read": "0 bytes",
            "written": "0 bytes",
            "flowFilesIn": 0,
            "bytesIn": 0,
            "input": "0 (0 bytes)",
            "flowFilesOut": 0,
            "bytesOut": 0,
            "output": "0 (0 bytes)",
            "taskCount": 0,
            "tasksDurationNanos": 0,
            "tasks": "0",
            "tasksDuration": "00:00:00.000",
            "activeThreadCount": 0
          }
        }
      }
    ],
    "inputPorts": [],
    "outputPorts": [],
    "connections": [
      {
        "revision": {
          "version": 0
        },
        "id": "d46d094d-81f5-4c00-7554-2c9c5ffc2650",
        "uri": "http://localhost:8888/nifi-api/connections/d46d094d-81f5-4c00-7554-2c9c5ffc2650",
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "component": {
          "id": "d46d094d-81f5-4c00-7554-2c9c5ffc2650",
          "parentGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "source": {
            "id": "13613f8e-d402-4018-f9c4-0172641096d6",
            "type": "PROCESSOR",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "Extract Date to Attribute",
            "running": false,
            "comments": ""
          },
          "destination": {
            "id": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
            "type": "PROCESSOR",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "Replace Content with new Date",
            "running": false,
            "comments": ""
          },
          "name": "",
          "labelIndex": 1,
          "zIndex": 0,
          "selectedRelationships": [
            "matched"
          ],
          "availableRelationships": [
            "matched",
            "unmatched"
          ],
          "backPressureObjectThreshold": 0,
          "backPressureDataSizeThreshold": "0 MB",
          "flowFileExpiration": "0 sec",
          "prioritizers": [],
          "bends": []
        },
        "status": {
          "id": "d46d094d-81f5-4c00-7554-2c9c5ffc2650",
          "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "name": "matched",
          "statsLastRefreshed": "18:06:21 CEST",
          "sourceId": "13613f8e-d402-4018-f9c4-0172641096d6",
          "sourceName": "Extract Date to Attribute",
          "destinationId": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
          "destinationName": "Replace Content with new Date",
          "aggregateSnapshot": {
            "id": "d46d094d-81f5-4c00-7554-2c9c5ffc2650",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "matched",
            "sourceName": "Extract Date to Attribute",
            "destinationName": "Replace Content with new Date",
            "flowFilesIn": 0,
            "bytesIn": 0,
            "input": "0 (0 bytes)",
            "flowFilesOut": 0,
            "bytesOut": 0,
            "output": "0 (0 bytes)",
            "flowFilesQueued": 0,
            "bytesQueued": 0,
            "queued": "0 (0 bytes)",
            "queuedSize": "0 bytes",
            "queuedCount": "0"
          }
        },
        "bends": [],
        "labelIndex": 1,
        "zIndex": 0,
        "sourceId": "13613f8e-d402-4018-f9c4-0172641096d6",
        "sourceGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
        "sourceType": "PROCESSOR",
        "destinationId": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
        "destinationGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
        "destinationType": "PROCESSOR"
      },
      {
        "revision": {
          "version": 0
        },
        "id": "42a059b7-62b1-4f72-6494-27a5858658b5",
        "uri": "http://localhost:8888/nifi-api/connections/42a059b7-62b1-4f72-6494-27a5858658b5",
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "component": {
          "id": "42a059b7-62b1-4f72-6494-27a5858658b5",
          "parentGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "source": {
            "id": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
            "type": "PROCESSOR",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "Replace Content with new Date",
            "running": false,
            "comments": ""
          },
          "destination": {
            "id": "c8d56491-4d2e-4751-589f-3d69cb5f067f",
            "type": "PROCESSOR",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "LogAttribute",
            "running": false,
            "comments": ""
          },
          "name": "",
          "labelIndex": 1,
          "zIndex": 0,
          "selectedRelationships": [
            "success"
          ],
          "availableRelationships": [
            "failure",
            "success"
          ],
          "backPressureObjectThreshold": 0,
          "backPressureDataSizeThreshold": "0 MB",
          "flowFileExpiration": "0 sec",
          "prioritizers": [],
          "bends": []
        },
        "status": {
          "id": "42a059b7-62b1-4f72-6494-27a5858658b5",
          "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "name": "success",
          "statsLastRefreshed": "18:06:21 CEST",
          "sourceId": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
          "sourceName": "Replace Content with new Date",
          "destinationId": "c8d56491-4d2e-4751-589f-3d69cb5f067f",
          "destinationName": "LogAttribute",
          "aggregateSnapshot": {
            "id": "42a059b7-62b1-4f72-6494-27a5858658b5",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "success",
            "sourceName": "Replace Content with new Date",
            "destinationName": "LogAttribute",
            "flowFilesIn": 0,
            "bytesIn": 0,
            "input": "0 (0 bytes)",
            "flowFilesOut": 0,
            "bytesOut": 0,
            "output": "0 (0 bytes)",
            "flowFilesQueued": 0,
            "bytesQueued": 0,
            "queued": "0 (0 bytes)",
            "queuedSize": "0 bytes",
            "queuedCount": "0"
          }
        },
        "bends": [],
        "labelIndex": 1,
        "zIndex": 0,
        "sourceId": "55c734e3-9e8c-4d8e-043d-947cf175a5c2",
        "sourceGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
        "sourceType": "PROCESSOR",
        "destinationId": "c8d56491-4d2e-4751-589f-3d69cb5f067f",
        "destinationGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
        "destinationType": "PROCESSOR"
      },
      {
        "revision": {
          "version": 0
        },
        "id": "4c9b4914-79aa-496e-c069-2182a0c4dd5f",
        "uri": "http://localhost:8888/nifi-api/connections/4c9b4914-79aa-496e-c069-2182a0c4dd5f",
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "component": {
          "id": "4c9b4914-79aa-496e-c069-2182a0c4dd5f",
          "parentGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "source": {
            "id": "daf07177-3fe2-42a8-5074-20a9c39e054d",
            "type": "PROCESSOR",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "Create Test Data",
            "running": false,
            "comments": ""
          },
          "destination": {
            "id": "13613f8e-d402-4018-f9c4-0172641096d6",
            "type": "PROCESSOR",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "Extract Date to Attribute",
            "running": false,
            "comments": ""
          },
          "name": "",
          "labelIndex": 1,
          "zIndex": 0,
          "selectedRelationships": [
            "success"
          ],
          "availableRelationships": [
            "failure",
            "success"
          ],
          "backPressureObjectThreshold": 0,
          "backPressureDataSizeThreshold": "0 MB",
          "flowFileExpiration": "0 sec",
          "prioritizers": [],
          "bends": []
        },
        "status": {
          "id": "4c9b4914-79aa-496e-c069-2182a0c4dd5f",
          "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "name": "success",
          "statsLastRefreshed": "18:06:21 CEST",
          "sourceId": "daf07177-3fe2-42a8-5074-20a9c39e054d",
          "sourceName": "Create Test Data",
          "destinationId": "13613f8e-d402-4018-f9c4-0172641096d6",
          "destinationName": "Extract Date to Attribute",
          "aggregateSnapshot": {
            "id": "4c9b4914-79aa-496e-c069-2182a0c4dd5f",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "success",
            "sourceName": "Create Test Data",
            "destinationName": "Extract Date to Attribute",
            "flowFilesIn": 0,
            "bytesIn": 0,
            "input": "0 (0 bytes)",
            "flowFilesOut": 0,
            "bytesOut": 0,
            "output": "0 (0 bytes)",
            "flowFilesQueued": 0,
            "bytesQueued": 0,
            "queued": "0 (0 bytes)",
            "queuedSize": "0 bytes",
            "queuedCount": "0"
          }
        },
        "bends": [],
        "labelIndex": 1,
        "zIndex": 0,
        "sourceId": "daf07177-3fe2-42a8-5074-20a9c39e054d",
        "sourceGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
        "sourceType": "PROCESSOR",
        "destinationId": "13613f8e-d402-4018-f9c4-0172641096d6",
        "destinationGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
        "destinationType": "PROCESSOR"
      },
      {
        "revision": {
          "version": 0
        },
        "id": "5bc1bf77-d2e7-47ff-8a62-81a4a5ee5d0e",
        "uri": "http://localhost:8888/nifi-api/connections/5bc1bf77-d2e7-47ff-8a62-81a4a5ee5d0e",
        "permissions": {
          "canRead": true,
          "canWrite": true
        },
        "component": {
          "id": "5bc1bf77-d2e7-47ff-8a62-81a4a5ee5d0e",
          "parentGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "source": {
            "id": "3fde726d-5cc1-4bb6-0a59-a6125baf0d49",
            "type": "PROCESSOR",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "GenerateFlowFile",
            "running": false,
            "comments": ""
          },
          "destination": {
            "id": "daf07177-3fe2-42a8-5074-20a9c39e054d",
            "type": "PROCESSOR",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "Create Test Data",
            "running": false,
            "comments": ""
          },
          "name": "",
          "labelIndex": 1,
          "zIndex": 0,
          "selectedRelationships": [
            "success"
          ],
          "availableRelationships": [
            "success"
          ],
          "backPressureObjectThreshold": 0,
          "backPressureDataSizeThreshold": "0 MB",
          "flowFileExpiration": "0 sec",
          "prioritizers": [],
          "bends": []
        },
        "status": {
          "id": "5bc1bf77-d2e7-47ff-8a62-81a4a5ee5d0e",
          "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
          "name": "success",
          "statsLastRefreshed": "18:06:21 CEST",
          "sourceId": "3fde726d-5cc1-4bb6-0a59-a6125baf0d49",
          "sourceName": "GenerateFlowFile",
          "destinationId": "daf07177-3fe2-42a8-5074-20a9c39e054d",
          "destinationName": "Create Test Data",
          "aggregateSnapshot": {
            "id": "5bc1bf77-d2e7-47ff-8a62-81a4a5ee5d0e",
            "groupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
            "name": "success",
            "sourceName": "GenerateFlowFile",
            "destinationName": "Create Test Data",
            "flowFilesIn": 0,
            "bytesIn": 0,
            "input": "0 (0 bytes)",
            "flowFilesOut": 0,
            "bytesOut": 0,
            "output": "0 (0 bytes)",
            "flowFilesQueued": 0,
            "bytesQueued": 0,
            "queued": "0 (0 bytes)",
            "queuedSize": "0 bytes",
            "queuedCount": "0"
          }
        },
        "bends": [],
        "labelIndex": 1,
        "zIndex": 0,
        "sourceId": "3fde726d-5cc1-4bb6-0a59-a6125baf0d49",
        "sourceGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
        "sourceType": "PROCESSOR",
        "destinationId": "daf07177-3fe2-42a8-5074-20a9c39e054d",
        "destinationGroupId": "7a59e6f0-0156-1000-71b3-df1267a0cfd2",
        "destinationType": "PROCESSOR"
      }
    ],
    "labels": [],
    "funnels": []
  }
}